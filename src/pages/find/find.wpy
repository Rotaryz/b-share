<template>
  <view class="find">
    <cover-view class="nav">
      <cover-view wx:for="{{nav}}" wx:key="{{index}}"
                  class="item {{navIndex === index ? 'item-active' : ''}}"
                  @tap="checkNav({{index}})">
        {{item.title}}
        <cover-view class="item-line"></cover-view>
      </cover-view>
      <cover-view class="find-line"></cover-view>
    </cover-view>
    <view class="loading {{isLoad ? 'load-active' : ''}}">
      <image class="load-img" wx:if="{{imageUrl}}"
             src="{{imageUrl + '/defaults/share/page/icon-loading@2x.png'}}"></image>
      <view class="load-refresh">刷新中…</view>
    </view>
    <view class="list-box {{!isLoad ? 'find-box-active' : 'find-big-box'}}">
      <view class="find-item guidance" wx:if="{{showGuidance}}">
        <view class="find-box">
          <view class="cainter">
            <view class="user">
              <image class="header"></image>
              <text class="nickname">共享美导</text>
            </view>
            <view class="words">完成实名认证后，领取更多现金红包！</view>
            <image src="" class="img-one-item"></image>
          </view>
          <view class="information">
            <view class="time">10分钟前
            </view>
          </view>
        </view>
      </view>
      <view>
        <repeat wx:if="{{findList.length > 0}}" for="{{findList}}" key="index"
                index="index"
                item="item">
          <FindDetail :find.sync="item"></FindDetail>
        </repeat>
      </view>
    </view>
    <UnderlineBlock></UnderlineBlock>
    <view class="compile-icon" @tap="goCompile">
      <image class="compile-pic" wx:if="{{imageUrl}}"
             src="{{imageUrl + '/defaults/share/page/icon-write@2x.png'}}"></image>
    </view>
    <Toast></Toast>
    <PopUpWindows :content.sync="content"></PopUpWindows>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import {ERR_OK} from 'api/base'
  import FindDetail from '@/base/find-detail/find-detail'
  import Toast from '@/base/toast/toast'
  import logs from 'api/logs'
  import PopUpWindows from '@/base/pop-up-windows/pop-up-windows'
  import UnderlineBlock from '@/base/underline-block/underline-block'

  const NAV = [{title: '我关注的', type: 1}, {title: '全部', type: 0}, {
    title: '美导',
    type: 2
  }, {title: '门店', type: 3}]
  export default class find extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '共享美导',
      onReachBottomDistance: 30
    }
    data = {
      imageUrl: URIS.image,
      nav: NAV,
      navIndex: 0,
      isLoad: false,
      showGuidance: true,
      findList: [],
      page: 1,
      isChecked: false,
      scrollTop: '',
      startTop: 0,
      endTop: 0,
      isPull: false,
      option: '',
      loadMore: true,
      content: '',
      delIndex: {}
    }

    async onLoad() {
      this.findList = await this.load()
      wepy.startPullDownRefresh()
    }

    async onReachBottom() {
      this.page++

      if (this.loadMore) {
        let res = await this.load(this.option, this.page)
        this.loadMore = res.length !== 0
        this.findList = this.findList.concat(res)
        this.$apply()
      }
    }

    async load(option = 1, page = 1) {
      let data = {option: option, page: page}
      let findList = await logs.findList(data)
      this.isChecked = findList.is_checked
      let res = this.infoRes(findList)
      res.map((item) => {
        if (item.user_live_log_details.length === 0 && item.content.length > 50) {
          item.content = item.content.slice(0, 50)
          item.showDetail = true
          return item
        }
      })
      this.loaded()
      return res
    }

    infoRes(res) {
      if (res.error === ERR_OK) {
        return res.data
      }
    }

//    onPullDownRefresh() {
//      let res = wepy.startPullDownRefresh()
//      console.log(res)
//    }

    methods = {
      async start(e) {
        this.startTop = e.changedTouches[0].clientY
//        wepy.createSelectorQuery().select('.find').fields({
//          dataset: true,
//          size: true,
//          scrollOffset: true,
//          properties: ['scrollX', 'scrollY']
//        }, (res) => {
//          console.log(res)
//          this.scrollTop = res.scrollTop
//        }).exec()
      },
      move(e) {
        console.log(this.scrollTop)
//        if (!this.isPull) {
//          if (this.scrollTop < 10) {
//            this.endTop = e.changedTouches[0].clientY
//            if (this.endTop - this.startTop > 20) {
//              this.isLoad = true
//            } else {
//              this.isLoad = false
//            }
//          }
//        }
      },
      end() {
//        if (this.endTop - this.startTop > 20) {
//          this.isLoad = true
//          this.isPull = true
//        }
      },
      async checkNav(index) {
        this.navIndex = index * 1
        this.option = this.nav[this.navIndex].type
        this.findList = await this.load(this.option)
        this.loadMore = true
        this.$apply()
      },
      goCompile() {
        wepy.navigateTo({
          url: '/pages/compile/compile'
        })
      }
    }

    events = {
      async good(id) {
        for (let i = 0; i < this.findList.length; i++) {
          if (this.findList[i].id === id) {
            let like = 0
            this.findList[i].is_like ? like = 0 : like = 1
            let data = {user_live_log_id: id, like: like}
            let res = await logs.like(data)
            this.loaded()
            if (res.error === ERR_OK) {
              this.findList[i].is_like = !this.findList[i].is_like
              this.findList[i].is_like ? this.findList[i].like_count++ : this.findList[i].like_count--
              this.$apply()
            }
            break
          }
        }
      },
      async delFind(id) {
        this.$invoke('PopUpWindows', 'show')
        this.content = '是否确定删除服务日志？'
        for (let i = 0; i < this.findList.length; i++) {
          if (this.findList[i].id === id) {
            Object.assign(this.delIndex, {id: id, index: i})
            console.log(this.delIndex)
            break
          }
        }
      },
      async sure() {
        let res = await logs.delFind(this.delIndex.id)
        this.loaded()
        if (res.error === ERR_OK) {
          this.findList.splice(this.delIndex.index, 1)
          this.$apply()
        }
      }
    }
    watch = {
      loadMore(newValue) {
        if (!newValue) {
          this.$invoke('UnderlineBlock', 'show')
        } else {
          this.$invoke('UnderlineBlock', 'hide')
        }
      }
    }

    components = {
      Toast: Toast,
      FindDetail: FindDetail,
      PopUpWindows: PopUpWindows,
      UnderlineBlock: UnderlineBlock
    }
  }
</script>

<style lang="stylus">
  @import '../../common/stylus/variable'
  @import '../../common/stylus/mixin'
  .find
    min-height: 100vh
    overflow-y: auto
    background: $color-white
    .loading
      margin-top: 0px
      height: 0px
      background: $color-background
      display: flex
      justify-content: center
      align-items: center
      font-size: $font-size-small
      transition: height 1s
      .load-refresh
        color: $color-text-tr
        margin-left: 5px
      .load-img
        width: 17px
        height: @width
    .load-active
      margin-top: 45px
      height: 30px
      transition: height 1s

  /*animation :loadRotate 1s linear 2s infinite*/
  .list-box
    margin-bottom: 50px

  .guidance
    .img-one-item
      width: 100%
      height: 26.4vw
      background: $color-background
    .words
      white-space: nowrap

  .find-big-box
    margin-top: 0px

  .find-box-active
    margin-top: 60px

  .nav
    background: $color-white
    height: 45px
    font-size: $font-size-medium-x
    display: flex
    justify-content: space-between
    padding: 0 15px
    box-sizing: border-box
    position: absolute
    top: 0
    left: 0
    width: 100%
    z-index: 1000
    .find-line
      height: 1px
      background: $color-split-line
      width: 100%
      position: fixed
      bottom: 0
      left: 0
    .item
      color: $color-text-tr
      position: relative
      height: 100%
      line-height: 45px
      .item-line
        height: 2px
        width: 24px
        row-center()
        bottom: 0px
        z-index: 500
        background: transparent
    .item-active
      color: $color-text
      .item-line
        background: $color-assist-pink

  .compile-icon
    position: fixed
    bottom: 0px
    right: 0px
    .compile-pic
      width: 67px
      height: @width

</style>
