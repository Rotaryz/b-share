<template>
  <view class="find" @touchmove="fixation">
    <view class="nav" style="top:{{bottom}}px">
      <view wx:for="{{nav}}" wx:key="{{index}}"
            class="item {{navIndex === index ? 'item-active' : ''}}"
            @tap="checkNav({{index}})">
        {{item.title}}
        <view class="item-line"></view>
      </view>
      <view class="find-line"></view>
    </view>
    <!--<view class="loading {{isLoad ? 'load-active' : ''}}">-->
    <!--<image class="load-img" wx:if="{{imageUrl}}"-->
    <!--src="{{imageUrl + '/defaults/share/page/icon-loading@2x.png'}}"></image>-->
    <!--<view class="load-refresh">刷新中…</view>-->
    <!--</view>-->
    <view class="list-box find-box-active">
      <view class="find-item guidance" wx:if="{{!isChecked}}" @tap="goAnswer">
        <view class="find-box">
          <view class="cainter">
            <view class="user">
              <image class="header" mode="aspectFill" wx:if="{{imageUrl}}"
                     src="{{imageUrl + '/defaults/share/page/pic-m@2x.png'}}"></image>
              <text class="nickname">共享美导</text>
            </view>
            <view class="words">完成{{role ? '店铺验证' : '美导问答'}}后，领取更多现金红包！</view>
            <image wx:if="{{imageUrl}}" src="{{guidanceBanner}}"
                   class="img-one-item"></image>
          </view>
          <view class="information" @tap.stop="delStick">
            删除
          </view>
        </view>
      </view>
      <view wx:if="{{navIndex === 0}}">
        <Blank wx:if="{{!findList.length}}"></Blank>
        <repeat for="{{findList}}" key="index"
                index="index" item="item">
          <FindDetail :find.sync="item" :listNum.sync="index"></FindDetail>
        </repeat>
      </view>
      <view wx:if="{{navIndex === 1}}">
        <Blank wx:if="{{!findAll.length}}"></Blank>
        <repeat for="{{findAll}}" key="index"
                index="index" item="item">
          <FindDetail :find.sync="item" :listNum.sync="index"></FindDetail>
        </repeat>
      </view>
      <view wx:if="{{navIndex === 2}}">
        <Blank wx:if="{{!findPeo.length}}"></Blank>
        <repeat for="{{findPeo}}" key="index"
                index="index" item="item">
          <FindDetail :find.sync="item" :listNum.sync="index"></FindDetail>
        </repeat>
      </view>
      <view wx:if="{{navIndex === 3}}">
        <Blank wx:if="{{!findShop.length}}"></Blank>
        <repeat for="{{findShop}}" key="index"
                index="index" item="item">
          <FindDetail :find.sync="item" :listNum.sync="index"></FindDetail>
        </repeat>
      </view>
    </view>
    <UnderlineBlock></UnderlineBlock>
    <view class="compile-icon" @tap="goCompile">
      <image class="compile-pic" wx:if="{{imageUrl}}"
             src="{{imageUrl + '/defaults/share/page/icon-write@2x.png'}}"></image>
    </view>
    <Toast></Toast>
    <PopUpWindows></PopUpWindows>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import {ERR_OK} from 'api/base'
  import FindDetail from '@/base/find-detail/find-detail'
  import Toast from '@/base/toast/toast'
  import logs from 'api/logs'
  import PopUpWindows from '@/base/pop-up-windows/pop-up-windows'
  import UnderlineBlock from '@/base/underline-block/underline-block'
  import Blank from '@/base/blank/blank'
  const ROLE = wepy.getStorageSync('user_info').role
  const NAV = [{title: '我关注的', type: 1}, {title: '全部', type: 0}, {
    title: '美导',
    type: 2
  }, {title: '门店', type: 3}]
  export default class find extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '共享美导',
      onReachBottomDistance: 30,
      enablePullDownRefresh: true,
      backgroundTextStyle: 'dark',
      backgroundColor: '#ffffff'
    }
    data = {
      findAll: [],
      findPeo: [],
      findShop: [],
      role: ROLE,
      imageUrl: URIS.image,
      nav: NAV,
      navIndex: 0,
      isLoad: false,
      showGuidance: true,
      findList: [],
      page: 1,
      pageAll: 1,
      pageShop: 1,
      pagePeo: 1,
      isChecked: true,
      scrollTop: '',
      startTop: 0,
      endTop: 0,
      isPull: false,
      option: 1,
      loadMore: true,
      content: '',
      delIndex: {},
      bottom: 0,
      check: false,
      userLiveLogIid: [],
      videoIndex: 0,
      scroll: -1,
      guidanceBanner: ROLE ? URIS.image + '/defaults/share/page/pic-banner_02@2x.png' : URIS.image + '/defaults/share/page/pic-banner_03@2x.png'
    }

    async onPullDownRefresh() {
      if (this.navIndex === 0) {
        this.findList = await this.load(this.option)
        this.page = 1
      } else if (this.navIndex === 1) {
        this.findAll = await this.load(this.option)
        this.pageAll = 1
      } else if (this.navIndex === 2) {
        this.findPeo = await this.load(this.option)
        this.pagePeo = 1
      } else if (this.navIndex === 3) {
        this.findShop = await this.load(this.option)
        this.pageShop = 1
      }
      this.loadMore = true
      setTimeout(() => {
        wepy.hideTabBarRedDot({index: 1})
        wepy.stopPullDownRefresh()
        this.bottom = 0
        this.$parent.updateGlobalData('status', 0)
        this.$apply()
      }, 50)
      this.$apply()
    }

    async onLoad(option) {
      this.findList = await this.load()
      this.showBlank(this.findList)
      this.$apply()
      if (option.redPack && option.redPack === '1') {
        this.$invoke('PopUpWindows', 'show', '', false, option.price)
      }
      let id = wepy.getStorageSync('user_info').id
      let socket = this.$parent.globalData.socket
      socket.on(`channel-remind:newMessage:${id}`, (msg) => {
        wepy.showTabBarRedDot({index: 1})
        this.userLiveLogIid.push(msg.user_live_log_id)
        this.$apply()
      })
    }

    onPageScroll(e) {
      if (this.videoIndex !== -1) {
        let status = false
        if ((e.scrollTop - this.scroll > 2 || this.scroll - e.scrollTop > 2) && this.scroll - e.scrollTop === e.scrollTop - this.scroll) {
          this.scroll = e.scrollTop
          status = false
        } else if (this.scroll - e.scrollTop === 0) {
          status = true
        }
        if (this.navIndex === 0) {
          this.findList[this.videoIndex].video = status
        } else if (this.navIndex === 1) {
          this.findAll[this.videoIndex].video = status
        } else if (this.navIndex === 2) {
          this.findPeo[this.videoIndex].video = status
        } else if (this.navIndex === 3) {
          this.findShop[this.videoIndex].video = status
        }
        this.$apply()
      }
    }

    async onShow() {
      if (this.userLiveLogIid.length) {
        wepy.startPullDownRefresh()
        await this.onPullDownRefresh()
        this.userLiveLogIid = []
        wepy.hideTabBarRedDot({index: 1})
        this.$apply()
      }
      setTimeout(() => {
        this.bottom = 0
        this.$apply()
      }, 50)
      if (this.$parent.globalData.status && this.$parent.globalData.status === 2) {
        this.$invoke('PopUpWindows', 'show', '内容不会保存，退出编辑？')
        this.content = true
      } else if (this.$parent.globalData.status && this.$parent.globalData.status === 1) {
//        刷新列表
        wepy.startPullDownRefresh()
        await this.onPullDownRefresh()
      }
      if (this.$parent.globalData.logId) {
        let id = this.$parent.globalData.logId
        if (this.navIndex === 0) {
          for (let i = 0; i < this.findList.length; i++) {
            if (this.findList[i].id === id) {
              this.findList.splice(i, 1)
              this.$parent.updateGlobalData('logId', null)
              this.$apply()
              break
            }
          }
        } else if (this.navIndex === 1) {
          for (let i = 0; i < this.findAll.length; i++) {
            if (this.findAll[i].id === id) {
              this.findAll.splice(i, 1)
              this.$parent.updateGlobalData('logId', null)
              this.$apply()
              break
            }
          }
        } else if (this.navIndex === 2) {
          for (let i = 0; i < this.findPeo.length; i++) {
            if (this.findPeo[i].id === id) {
              this.findPeo.splice(i, 1)
              this.$parent.updateGlobalData('logId', null)
              this.$apply()
              break
            }
          }
        } else if (this.navIndex === 3) {
          for (let i = 0; i < this.findShop.length; i++) {
            if (this.findShop[i].id === id) {
              this.findShop.splice(i, 1)
              this.$parent.updateGlobalData('logId', null)
              this.$apply()
              break
            }
          }
        }
      }
      this.$apply()
    }

    showBlank(res) {
      if (res.length === 0 && this.isChecked) {
        this.$invoke('Blank',
          'show',
          this.imageUrl + '/defaults/share/page/pic-nothing@2x.png', '暂无内容', '35.2')
      } else {
        this.$invoke('Blank', 'hide')
      }
    }

    async onReachBottom() {
      this.bottom = 0
      if (this.loadMore) {
        if (this.navIndex === 0) {
          this.page++
          let res = await this.load(this.option, this.page)
          this.loadMore = res.length !== 0
          this.findList = this.findList.concat(res)
        } else if (this.navIndex === 1) {
          this.pageAll++
          let res = await this.load(this.option, this.pageAll)
          this.loadMore = res.length !== 0
          this.findAll = this.findAll.concat(res)
        } else if (this.navIndex === 2) {
          this.pagePeo++
          let res = await this.load(this.option, this.pagePeo)
          this.loadMore = res.length !== 0
          this.findPeo = this.findPeo.concat(res)
        } else if (this.navIndex === 3) {
          this.pageShop++
          let res = await this.load(this.option, this.pageShop)
          this.loadMore = res.length !== 0
          this.findShop = this.findShop.concat(res)
        }
        this.$apply()
      }
    }

    async load(option = 1, page = 1) {
      let data = {option: option, page: page}
      let findList = await logs.findList(data)
      let isChecked = wepy.getStorageSync('isChecked')
      if (!isChecked) {
        this.isChecked = findList.is_checked
      }
      let res = this.infoRes(findList)
      if (res && res.length !== 0) {
        res.map((item) => {
          if (item.user_live_log_details.length === 0 && item.content.length > 50) {
            item.content = item.content.slice(0, 50)
            item.showDetail = true
            return item
          }
        })
      }
      this.loaded()
      return res
    }

    infoRes(res) {
      if (res.error === ERR_OK) {
        return res.data
      }
    }

    methods = {
      fixation() {
        this.bottom = 0
        this.$apply()
      },
      goAnswer() {
        if (wepy.getStorageSync('user_info').role) {
          this.$navigate('/pages/name-authentication/name-authentication')
        } else {
          this.$navigate('/pages/answer-index/answer-index')
        }
      },
      delStick() {
        this.check = true
        this.$invoke('PopUpWindows', 'show', '是否确定删除该系统信息？')
      },
      async checkNav(index) {
        this.navIndex = index * 1
        this.option = this.nav[this.navIndex].type
        if (index === 0 && this.findList.length === 0) {
          this.findList = await this.load(this.option)
          this.showBlank(this.findList)
        } else if (index === 1 && this.findAll.length === 0) {
          this.findAll = await this.load(this.option)
          this.showBlank(this.findAll)
        } else if (index === 2 && this.findPeo.length === 0) {
          this.findPeo = await this.load(this.option)
          this.showBlank(this.findPeo)
        } else if (index === 3 && this.findShop.length === 0) {
          this.findShop = await this.load(this.option)
          this.showBlank(this.findShop)
        }
        this.loadMore = true
        this.$apply()
      },
      goCompile() {
        wepy.navigateTo({
          url: '/pages/compile/compile'
        })
      }
    }

    events = {
      good(res, index) {
        if (this.navIndex === 0) {
          this.findList[index] = res
        } else if (this.navIndex === 1) {
          this.findAll[index] = res
        } else if (this.navIndex === 2) {
          this.findPeo[index] = res
        } else if (this.navIndex === 3) {
          this.findShop[index] = res
        }
        this.$apply()
      },
      async delFind(id) {
        this.$invoke('PopUpWindows', 'show', '是否确定删除服务日志？')
        this.content = false
        this.check = false
        if (this.navIndex === 0) {
          for (let i = 0; i < this.findList.length; i++) {
            if (this.findList[i].id === id) {
              Object.assign(this.delIndex, {id: id, index: i})
              break
            }
          }
        } else if (this.navIndex === 1) {
          for (let i = 0; i < this.findAll.length; i++) {
            if (this.findAll[i].id === id) {
              Object.assign(this.delIndex, {id: id, index: i})
              break
            }
          }
        } else if (this.navIndex === 2) {
          for (let i = 0; i < this.findPeo.length; i++) {
            if (this.findPeo[i].id === id) {
              Object.assign(this.delIndex, {id: id, index: i})
              break
            }
          }
        } else if (this.navIndex === 3) {
          for (let i = 0; i < this.findShop.length; i++) {
            if (this.findShop[i].id === id) {
              Object.assign(this.delIndex, {id: id, index: i})
              break
            }
          }
        }
      },
      async sure() {
        if (!this.content) {
          let res = await logs.delFind(this.delIndex.id)
          this.loaded()
          if (res.error === ERR_OK) {
            if (this.navIndex === 0) {
              this.findList.splice(this.delIndex.index, 1)
            } else if (this.navIndex === 1) {
              this.findAll.splice(this.delIndex.index, 1)
            } else if (this.navIndex === 2) {
              this.findPeo.splice(this.delIndex.index, 1)
            } else if (this.navIndex === 3) {
              this.findShop.splice(this.delIndex.index, 1)
            }

            this.$apply()
          }
          this.$parent.updateGlobalData('status', 1)
        }
        if (this.check) {
          this.isChecked = true
          this.$apply()
          this.$parent.updateGlobalData('status', 0)
          wepy.setStorageSync('isChecked', this.isChecked)
        } else {
          this.$parent.updateGlobalData('status', 0)
        }
      },
      cancel() {
        if (this.content) {
          wepy.navigateTo({
            url: '/pages/compile/compile?status=1'
          })
          this.check = false
        }
      },
      showVideo(find, index) {
        this.videoIndex = index
        if (this.navIndex === 0) {
          this.findList[index] = find
        } else if (this.navIndex === 1) {
          this.findAll[index] = find
        } else if (this.navIndex === 2) {
          this.findPeo[index] = find
        } else if (this.navIndex === 3) {
          this.findShop[index] = find
        }
        console.log(find, index)
      }
    }
    watch = {
      loadMore(newValue) {
        if (!newValue) {
          this.$invoke('UnderlineBlock', 'show')
        } else {
          this.$invoke('UnderlineBlock', 'hide')
        }
      }
    }

    components = {
      Toast: Toast,
      FindDetail: FindDetail,
      PopUpWindows: PopUpWindows,
      UnderlineBlock: UnderlineBlock,
      Blank: Blank
    }
  }
</script>

<style lang="stylus">
  @import '../../common/stylus/variable'
  @import '../../common/stylus/mixin'
  .find
    min-height: 100vh
    overflow-y: auto
    background: $color-white
    position: relative
    .loading
      position: fixed
      top: 45px
      width: 100%
      margin-top: 0px
      height: 30px
      background: $color-background
      display: flex
      justify-content: center
      align-items: center
      font-size: $font-size-small
      transition: height 1s
      .load-refresh
        color: $color-text-tr
        margin-left: 5px
      .load-img
        width: 17px
        height: @width
    .load-active
      margin-top: 45px
      height: 30px
      transition: height 1s

  /*animation :loadRotate 1s linear 2s infinite*/
  .list-box
    margin-bottom: 50px

  .guidance
    .img-one-item
      width: 100%
      height: 26.4vw
      background: $color-background
    .words
      white-space: nowrap
    .information
      display: block
      padding-left: 0px
      color: $color-del

  .find-big-box
    margin-top: 0px

  .find-box-active
    margin-top: 60px

  .nav
    background: $color-white
    height: 45px
    font-size: $font-size-medium-x
    display: flex
    justify-content: space-between
    padding: 0 15px
    box-sizing: border-box
    position: fixed
    top: 0
    left: 0
    width: 100%
    z-index: 1000
    .find-line
      height: 1px
      background: $color-split-line
      width: 100%
      position: absolute
      bottom: 0
      left: 0
    .item
      color: $color-text-tr
      position: relative
      height: 100%
      line-height: 45px
      .item-line
        height: 2px
        width: 24px
        row-center()
        bottom: 0px
        z-index: 1500
        background: transparent
    .item-active
      color: $color-text
      .item-line
        background: $color-assist-pink

  .compile-icon
    position: fixed
    bottom: 0px
    right: 0px
    .compile-pic
      width: 67px
      height: @width

  cover-view
    &:active
      background: $color-white
</style>
