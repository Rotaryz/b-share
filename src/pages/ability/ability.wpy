<template>
  <view class="ability">
    <Radar :configArr.sync="configArr"></Radar>

    <view class="container">
      <view class="item" wx:if="{{everydayArr.length}}">
        <view class="title">
          <view class="blue-black"></view>
          <view class="title-txt">每日任务</view>
        </view>
        <view class="item-li" wx:for="{{everydayArr}}" wx:key="{{item}}">
          <image class="item-li-left" src="{{item.image_url}}"></image>
          <view class="item-li-right">
            <view class="item-li-title">{{item.name}}</view>
            <view class="item-li-btn {{item.already ? 'dis' : ''}}" @tap="doneAbility({{item.url}}, {{item.code}})">{{item.already ? '已完成' : item.code === 'invitationGuide' ? '去邀请' : '去完成'}}</view>
          </view>
        </view>
      </view>

      <view class="item" wx:if="{{noviceArr.length}}">
        <view class="title">
          <view class="blue-black"></view>
          <view class="title-txt">新手任务</view>
        </view>
        <view class="item-li" wx:for="{{noviceArr}}" wx:key="{{item}}">
          <image class="item-li-left" src="{{item.image_url}}"></image>
          <view class="item-li-right">
            <view class="item-li-title">{{item.name}}</view>
            <view class="item-li-btn {{item.already ? 'dis' : ''}}" @tap="doneAbility({{item.url}}, {{item.code}})">{{item.already ? '已完成' : item.code === 'invitationGuide' ? '去邀请' : '去完成'}}</view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import base from 'common/mixins/base'
  import URIS from 'common/js/config'
  import {ERR_OK} from 'api/base'
  import Radar from '@/base/radar/radar'
  import Info from 'api/info'
  import Beauticians from 'api/beauticians'

  export default class ability extends wepy.page {
    mixins = [base]

    config = {
      navigationBarTitleText: '能力提升'
    }

    data = {
      imageUrl: URIS.image,
      configArr: {
        eventIn: false,
        checked: -1,
        data: [0, 0, 0, 0, 0],
        score: 0
      },
      role: 0,
      everydayArr: [],
      noviceArr: []
    }

    async onShow() {
      await this.load()
    }

    async load() {
      let Json = await Info.getAbilityList()
      if (Json.error !== ERR_OK) {
        this.loaded()
        return
      }
      let res = Json.data
      this.everydayArr = res.filter((item) => {
        return item.type === 1
      })
      this.noviceArr = res.filter((item) => {
        return item.type === 0
      })
      let Json1 = await Info.getUserInfo()
      if (Json1.error !== ERR_OK) {
        this.loaded()
        return
      }
      this.role = Json1.data.role
      let Json2 = await Beauticians.getScores()
      this.loaded()
      if (Json2.error === ERR_OK) {
        let scoreRes = Json2.data
        let max = scoreRes.max_score
        this.configArr.data = [scoreRes.zhuanye / max * 100, scoreRes.xiaoshou / max * 100, scoreRes.guanxi / max * 100, scoreRes.peixun / max * 100, scoreRes.cehua / max * 100]
        this.configArr.score = scoreRes.score
      }
      this.$invoke('Radar', 'init', this.configArr)
      this.loaded()
      this.$apply()
    }

//    _testIn(arr, str) {
//      let res = arr.indexOf(str)
//      if (res === -1) {
//        return false
//      } else {
//        return true
//      }
//    }

    methods = {
      doneAbility(url, code) {
        if (code === 'serviceLog') {
          this.$switch(url)
        } else {
          this.$navigate(url)
        }
//        switch (num * 1) {
//          case 1:
//            if (!this.invite) {
//              this.$navigate('/pages/invitPerson/invitPerson')
//            }
//            break
//          case 2:
//            if (!this.serverLog) {
//              this.$switch('/pages/find/find')
//            }
//            break
//          case 3:
//            if (!this.profile) {
//              this.$navigate('/pages/my-profile/my-profile')
//            }
//            break
//          case 4:
//            if (!this.relName) {
//              this.$navigate('/pages/name-authentication/name-authentication')
//            }
//            break
//          case 5:
//            if (!this.relName) {
//              this.$navigate('/pages/answer-index/answer-index')
//            }
//            break
//          case 6:
//            if (!this.tryApp) {
//              this.$navigate('/pages/my-app/my-app')
//            }
//            break
//        }
      }
    }

    components = {
      Radar
    }

    computed = {
//      invite() {
//        return this._testIn(this.everydayArr, '005')
//      },
//      serverLog() {
//        return this._testIn(this.everydayArr, '006')
//      },
//      profile() {
//        return this._testIn(this.noviceArr, '001')
//      },
//      relName() {
//        return this._testIn(this.noviceArr, '002')
//      },
//      answer() {
//        return this._testIn(this.noviceArr, '003')
//      },
//      tryApp() {
//        return this._testIn(this.noviceArr, '004')
//      }
    }
  }
</script>

<style lang="stylus">
  @import '../../common/stylus/variable'
  @import '../../common/stylus/mixin'

  .ability

    .container
      margin-top: 10px
      padding-bottom: 50px
      background: $color-white
      .item
        padding-left: 15px
        .title
          height: 54px
          display: flex
          align-items: center
          .blue-black
            width: 4px
            height: 14px
            background: $color-assist-bule
            margin-right: 5px
          .title-txt
            font-size: $font-size-medium-x
            color: $color-text
            font-family: PingFangSC-Regular
        .item-li
          display: flex
          height: 54px
          align-items: center
          .item-li-left
            width: 32.5px
            height: 32.5px
            margin-right: 10px
          .item-li-right
            flex: 1
            display: flex
            height: 54px
            justify-content: space-between
            align-items: center
            padding-right: 9px
            border-bottom: 0.5px solid $color-col-line
            .item-li-title
              font-size: $font-size-medium-x
              color: $color-text
            .item-li-btn
              width: 74px
              height: 29px
              border-radius: 14.5px
              nomal-icon(4px, 12px)
              font-family: PingFangSC-Regular
              font-size: $font-size-medium
              color: $color-white
              text-align: center
              line-height: 29px
              &:active
                hover-icon(4px, 12px)
            .item-li-btn.dis
              background: $color-assist-gray
              box-shadow: none



</style>
